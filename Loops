//Loops
//while Loop
//For Loop

//Short hand operators
// i = i+1 => i++
// i = i-1 => i--

// i = i+5 => i += 5 
// i = i*2 => i *= 2



public class Main
{
    public void alarm(){
        
        boolean on = checkAlarm();
        
        while(on){
            beep();
            on = checkAlarm();
        }
    }
    
    public boolean checkAlarm()
    {
        boolean on = false;
        return on;
    }
    
    public void beep(){
        System.out.println("Alarm is on");
    }
    
    public int rollDice(){
        double randomNumber = Math.random();
        
        randomNumber = randomNumber * 6;
        
        //adding one so that the range is betwween 1 and 6.
        randomNumber = randomNumber + 1;
        
        //Casting double to int
        int randomInt = (int) randomNumber;
        
        return randomInt;
    }
    
    public int keepRolling(){
        int dice1 = rollDice();
        int dice2 = rollDice();
        int dice3 = rollDice();
        int dice4 = rollDice();
        int dice5 = rollDice();
        
        int count = 1;
        
        while(!(dice1 == dice2 && dice2 == dice3 && dice3 == dice4 && dice4 == dice5)){
            
            dice1 = rollDice();
            dice2 = rollDice();
            dice3 = rollDice();
            dice4 = rollDice();
            dice5 = rollDice();
            count = count + 1;
        }
        return count;
        
    }
    
    //while loop
    public void raiseAlarm(int numOfWarnings){
        int i=1;
        while(i <= numOfWarnings){
            System.out.println("Warning "+i);
            i++;
        }
    }
    
    //For loop
    public void raiseAlarm1(int numOfWarnings){
        for(int i=1;i<=numOfWarnings;i++){
            System.out.println("Warning "+i);
        }
    }
    
    public int countBlocks(int levels){
        int total = 0;
        for(int i=1;i<=levels;i++){
            total += i*i;
        }
        
        return total;
        
    }
    
    //public boolean play(){ }

    
    public int martingale(){
        int money = 1000;
        int target = 1200;
        int bet = 10;
        
        while(money>bet){
            
            boolean win = play();
            
            if(win){
                money += bet;
            }else{
                money -= bet;
                bet *= 2;
                
            }
            
            if(money >= target){
                break;
            }
        }
        return money;
    }
    
	public static void main(String[] args) {
		
		Main myObj = new Main();
		myObj.alarm();
		
		System.out.println(myObj.keepRolling());
		
		myObj.raiseAlarm(5);
		myObj.raiseAlarm1(4);
		
	    int totalBlocks = myObj.countBlocks(5);
	    System.out.println("Number of blocks: "+totalBlocks);
	    
	    //Increment operator
	    for(int i=1;i<=5;i++){
	        System.out.println(i);
	    }
	    
	    //Decrement operator
	    for(int i=5;i>=1;i--){
	        System.out.println(i);
	    }
	    
	    //Martingale strategy
	    int money = myObj.martingale();
	}
}


Patterns

* * * * * 
*       * 
*       * 
* * * * * 


public class Main
{
	public static void main(String[] args) {
	
	    for(int i=0;i<4;i++){
	        for(int j=0;j<5;j++){
	            if(i==0 || j==0 || i==3 || j==4){
	                System.out.print("* ");
	            }else{
	                System.out.print("  ");
	            }
	        }
	        System.out.println();
	    }
		
	}
	
}


* 
* * 
* * * 
* * * * 

public class Main
{
	public static void main(String[] args) {
	
	    for(int i=1;i<=4;i++){
	        for(int j=0;j<i;j++){
	            System.out.print("* ");
	        }
	        System.out.println();
	    }
		
	}
	
}


* * * * 
* * * 
* * 
*

public class Main
{
	public static void main(String[] args) {
	
	    for(int i=4;i>0;i--){
	        for(int j=0;j<i;j++){
	            System.out.print("* ");
	        }
	        System.out.println();
	    }
		
	}
	
}
